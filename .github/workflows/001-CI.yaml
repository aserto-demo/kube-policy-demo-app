name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  workflow_dispatch:

env:
  POLICY_REPO: "apoland/policy-conftest"
  DOCKERHUB_REPO: "apoland/demo-app"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup caching
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2-

      - name: Install Policy CLI and cosign
        run: |
          wget -P /tmp "https://github.com/opcr-io/policy/releases/download/v0.1.26/policy0.1.26_linux_x86_64.zip"
          cd /tmp && unzip policy0.1.26_linux_x86_64.zip 
          sudo mv policy /usr/local/bin && chmod +x /usr/local/bin/policy
          wget https://github.com/sigstore/cosign/releases/download/v1.8.0/cosign-linux-amd64
          sudo mv cosign-linux-amd64 /usr/local/bin/cosign && chmod +x /usr/local/bin/cosign

      - name: Login to OPCR
        run: |
          echo ${{ secrets.POLICY_PASSWORD }} | policy login -u ${{ secrets.POLICY_USERNAME }} --password-stdin
          echo ${{ secrets.POLICY_PASSWORD }} | docker login opcr.io -u ${{ secrets.POLICY_USERNAME }} --password-stdin

      - name: Check policy signature
        run: |
          echo "${{ secrets.COSIGN_PUBLIC_KEY }}" > cosign.pub
          echo cosign verify --key cosign.pub opcr.io/$POLICY_REPO:1.0.0

      - name: Pull policy
        run: |
          policy pull $POLICY_REPO:1.0.0
          policy save $POLICY_REPO:1.0.0 -f - | tar -zxvf -

      - name: Test policy on Dockerfile
        run: |
          wget -q "https://github.com/open-policy-agent/conftest/releases/download/v0.29.0/conftest_0.29.0_Linux_x86_64.tar.gz"
          tar xzf conftest_0.29.0_Linux_x86_64.tar.gz
          ./conftest test Dockerfile

      - name: Run tests
        run: ./mvnw test

      - name: Run build
        run: ./mvnw package

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build . -t ${{ env.DOCKERHUB_REPO }}:1.0.0
          docker push ${{ env.DOCKERHUB_REPO }}:1.0.0
