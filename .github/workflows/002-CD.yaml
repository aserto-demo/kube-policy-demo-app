name: CD

on:
  workflow_run:
    workflows: [ "CI" ]
    types:
      - completed

  workflow_dispatch:

env:
  POLICY_REPO: "apoland/policy-gatekeeper"
  DOCKERHUB_REPO: "apoland/demo-app"

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - uses: actions/checkout@v3

      - name: Get GKE Credentials
        uses: google-github-actions/get-gke-credentials@v0.2.1
        with:
          credentials: ${{ secrets.GCP_CREDENTIALS }}
          cluster_name: cluster-1demo
          location: us-central1-c

      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl

      - name: Install Policy CLI
        run: |
          wget -q -P /tmp "https://github.com/opcr-io/policy/releases/download/v0.1.26/policy0.1.26_linux_x86_64.zip"
          cd /tmp && unzip policy0.1.26_linux_x86_64.zip
          chmod +x /tmp/policy

      - name: Login to OPCR
        run: |
          echo ${{ secrets.POLICY_PASSWORD }} | /tmp/policy login -u ${{ secrets.POLICY_USERNAME }} --password-stdin
          echo ${{ secrets.POLICY_PASSWORD }} | docker login opcr.io -u ${{ secrets.POLICY_USERNAME }} --password-stdin

      - name: Check policy signature
        run: |
          echo "$COSIGN_PUBLIC_KEY" >> cosign.pub
          echo /tmp/cosign verify -key cosign.pub opcr.io/$POLICY_REPO:latest

      - name: Pull policy
        run: |
          /tmp/policy pull $POLICY_REPO:latest
          /tmp/policy save $POLICY_REPO:latest -f - | tar -zxvf -

      - name: Apply latest policy to cluster
        run: |
          cat policy/k8s_requiredlabels.rego | awk '{ print "        " $0 }' >> k8s/templates/k8srequiredlabels_template.yaml
          kubectl apply -f k8s/templates/
          kubectl apply -f k8s/constraints/

      - name: Deploy app to kubernetes
        run: |
          kubectl apply -f k8s/001-namespace.yaml
          kubectl apply -f k8s/deployment.yaml

